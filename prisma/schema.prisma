datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  name          String
  password      String
  refresh_token String
  profile       Profile?
 
}

model admin {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  name          String
  password      String
  refresh_token String
}

model Profile {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  nomor     String     @unique
  provinsi  String
  kota      String
  kecamatan String
  kodepos   Int
  alamat    String
  
  userId    String     @unique @db.ObjectId
  user      user       @relation(fields: [userId], references: [id])
  
  cart      cart[]
}

model cart {
  cartid    String    @id @default(auto()) @map("_id") @db.ObjectId
  total     Int
  createAt  DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  //join tabel user dan cart
  ProfileId      String    @db.ObjectId
  Profile        Profile   @relation(fields: [ProfileId], references: [id])
  
  //join tabel producr dan cart
  productId   String[]  @db.ObjectId
  product     product[] @relation(fields: [productId], references: [productid])   
}

model product{
  productid     String   @id @default(auto()) @map("_id") @db.ObjectId
  public_id     String
  signature     String
  title         String
  harga         Int
  desc          String
  image         String
  createAt      DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // join category dan product
  categoryid    String[]   @db.ObjectId
  categorys     category[] @relation(fields: [categoryid], references: [categoryid])
  
  //join cart dan product
  cartid        String[]   @db.ObjectId
  carts         cart[]    @relation(fields: [cartid], references: [cartid])
}

model category{
  categoryid    String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryTitle String   @unique
  createAt      DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // join category dan product
  productid     String[]  @db.ObjectId
  products      product[] @relation(fields: [productid], references: [productid])
}

